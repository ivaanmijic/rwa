plugins {
    id 'java'
    id 'war'
    id 'org.gretty' version '4.1.1'  // For Tomcat deployment
    id 'application'  // For CLI application
}

group = 'com.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '23'
    targetCompatibility = '23'
}

repositories {
    mavenCentral()
}

dependencies {
    // Serialization - Gson
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'net.datafaker:datafaker:2.0.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    // Also needed: an actual implementation (e.g. Hibernate Validator)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

     // Google API Client for Java (Parent project for other Google API client libraries)
    implementation 'com.google.api-client:google-api-client:1.47.1' // Latest as of current date

    // YouTube Data API service library
    // Check https://mvnrepository.com/artifact/com.google.apis/google-api-services-youtube for the absolute latest revision
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20250422-2.0.0' // Use the most recent 'v3-revYYYYMMDD-X.Y.Z'

    // HTTP transport for Google APIs (Using the newer Apache HTTP Client v2 wrapper)
    // Ensure this version aligns with google-api-client if possible.
    // There's also -apache-v5 if you're using Apache HttpClient 5.x
    implementation 'com.google.http-client:google-http-client-apache-v2:1.47.1'

    // JSON data processing (Jackson2 is commonly used and pulled by google-api-client, but explicitly adding for clarity)
    implementation 'com.google.http-client:google-http-client-jackson2:1.47.1'

    // For OAuth 2.0 (if you need user authorization) - often good to keep in sync with google-api-client
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1' // This specific module might not always align perfectly
                                                                          // with the main client library, but 1.32.1 is common.
    // Jakarta EE 10 API
    compileOnly 'jakarta.platform:jakarta.jakartaee-api:10.0.0'
    
    // Hibernate Core
    implementation 'org.hibernate.orm:hibernate-core:6.4.0.Final'
    
    // Jakarta Servlet API for Tomcat 10
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    
    // MySQL Connector
    implementation 'com.mysql:mysql-connector-j:8.2.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // Security - BCrypt for password hashing
    implementation 'org.mindrot:jbcrypt:0.4'

}

test {
    useJUnitPlatform()
    // Skip all tests
    exclude '**/*'
}

gretty {
    servletContainer = 'tomcat10'
    contextPath = '/'
    httpPort = 8080
}

war {
    archiveFileName = 'voting.war'
}

// CLI application configuration
application {
    mainClass = 'com.example.video_voting.cli.AdminDataGenerator'
}

tasks.register('generateAdminData', JavaExec) {
    group = 'data'
    description = 'Populate the database with the sample admin.'

    classpath = sourceSets.main.runtimeClasspath
    mainClass.set(application.mainClass)
}
