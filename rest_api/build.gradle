plugins {
    id 'java'
    id 'war'
    id 'org.gretty' version '4.1.1'  // For Tomcat deployment
    id 'application'  // For CLI application
}

group = 'com.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '23'
    targetCompatibility = '23'
}

repositories {
    mavenCentral()
}

dependencies {
    // Jakarta EE 10 API
    compileOnly 'jakarta.platform:jakarta.jakartaee-api:10.0.0'
    
    // Hibernate Core
    implementation 'org.hibernate.orm:hibernate-core:6.4.0.Final'
    
    // Jakarta Servlet API for Tomcat 10
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    
    // MySQL Connector
    implementation 'com.mysql:mysql-connector-j:8.2.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // Security - BCrypt for password hashing
    implementation 'org.mindrot:jbcrypt:0.4'
    
    // Jersey dependencies for REST API
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.1.3'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.3'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:3.1.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // Jackson JSR310 module for Java 8 date/time types
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
}

test {
    useJUnitPlatform()
    // Skip all tests
    exclude '**/*'
}

gretty {
    servletContainer = 'tomcat10'
    contextPath = '/'
    httpPort = 8080
}

war {
    archiveFileName = 'blog.war'
}

// CLI application configuration
application {
    mainClass = 'com.example.blog.cli.BlogDataGenerator'
}

// Task to run the data generator
task generateBlogData(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.blog.cli.BlogDataGenerator'
    description = 'Generate sample blog entries'
    group = 'application'
}

// Task to generate user data
task generateUserData(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.blog.cli.UserDataGenerator'
    description = 'Generate sample users'
    group = 'application'
}